@model Cyclops.Web.ServerAppViewModel

@{
    string sid = ViewBag.SolutionId;
    
    SelectList serverList = Cyclops.SelectionListUtility.GetServers();
    

    var domainList = Cyclops.SelectListItemCache.Instance.ReadList("domains");
    
}

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ScopeId);
    @Html.HiddenFor(model => model.AppId)
    @Html.HiddenFor(model => model.ZoneId);
    @Html.Hidden("SolutionId", sid);
    
    <div class="form-horizontal">
        <h4>ServerAppViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.App, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.App
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Zone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.Zone
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Scope, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Model.Scope
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Domain, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DomainId, domainList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Domain,"", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Server, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ServerId, serverList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ServerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


